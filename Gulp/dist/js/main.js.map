{"version":3,"sources":["components/filter.js"],"names":["filter","$grid","$","imagesLoaded","isotope","itemSelector","layoutMode","getSortData","name","symbol","number","category","weight","itemElem","find","text","parseFloat","replace","filterFns","numberGreaterThan50","this","parseInt","ium","match","on","filterValue","attr","sortByValue","sortBy","each","i","buttonGroup","$buttonGroup","removeClass","addClass","btn","menu","mask","menuShow","toggleClass","window","ready","flickity","cellAlign","contain","prevNextButtons","wrapAround","autoPlay"],"mappings":"AAAA,SAAAA,SAGA,IAAAC,EAAAC,EAAA,gBAAAC,aAAA,WAEAF,EAAAG,QAAA,CACAC,aAAA,cACAC,WAAA,UACAC,YAAA,CACAC,KAAA,QACAC,OAAA,UACAC,OAAA,mBACAC,SAAA,kBACAC,OAAA,SAAAC,GACA,IAAAD,EAAAV,EAAAW,GAAAC,KAAA,WAAAC,OACA,OAAAC,WAAAJ,EAAAK,QAAA,UAAA,WAOAC,EAAA,CAEAC,oBAAA,WACA,IAAAT,EAAAR,EAAAkB,MAAAN,KAAA,WAAAC,OACA,OAAA,GAAAM,SAAAX,EAAA,KAGAY,IAAA,WAEA,OADApB,EAAAkB,MAAAN,KAAA,SAAAC,OACAQ,MAAA,UAKArB,EAAA,cAAAsB,GAAA,QAAA,SAAA,WACA,IAAAC,EAAAvB,EAAAkB,MAAAM,KAAA,eAEAD,EAAAP,EAAAO,IAAAA,EACAxB,EAAAG,QAAA,CACAJ,OAAAyB,MAKAvB,EAAA,UAAAsB,GAAA,QAAA,SAAA,WACA,IAAAG,EAAAzB,EAAAkB,MAAAM,KAAA,gBACAzB,EAAAG,QAAA,CACAwB,OAAAD,MAKAzB,EAAA,cAAA2B,KAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA9B,EAAA6B,GACAC,EAAAR,GAAA,QAAA,SAAA,WACAQ,EAAAlB,KAAA,WAAAmB,YAAA,UACA/B,EAAAkB,MAAAc,SAAA,cAIA,IAAAC,IAAAjC,EAAA,wBACAkC,KAAAlC,EAAA,gBACAmC,KAAAnC,EAAA,SAEA,SAAAoC,WACAH,IAAAX,GAAA,QAAA,WACAY,KAAAG,YAAA,aACAF,KAAAE,YAAA,eAIArC,EAAAsC,QAAAC,MAAA,WACAH,WACAtC,WAGAE,EAAA,eAAAwC,SAAA,CAEAC,UAAA,OACAC,SAAA,EACAC,iBAAA,EACAC,YAAA,EACAC,UAAA,IAGA7C,EAAA,mBAAAwC,SAAA,CAEAC,UAAA,OACAC,SAAA,EACAC,iBAAA,IAIA3C,EAAA,gBAAAwC,SAAA,CAEAC,UAAA,OACAC,SAAA,EACAC,iBAAA,EAEA1C,cAAA","file":"main.js","sourcesContent":["function filter() {\r\n\r\n  // init Isotope\r\n  var $grid = $('.works-grids').imagesLoaded(function () {\r\n    // init Isotope after all images have loaded\r\n    $grid.isotope({\r\n      itemSelector: '.works-grid',\r\n      layoutMode: 'fitRows',\r\n      getSortData: {\r\n        name: '.name',\r\n        symbol: '.symbol',\r\n        number: '.number parseInt',\r\n        category: '[data-category]',\r\n        weight: function (itemElem) {\r\n          var weight = $(itemElem).find('.weight').text();\r\n          return parseFloat(weight.replace(/[\\(\\)]/g, ''));\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  // filter functions\r\n  var filterFns = {\r\n    // show if number is greater than 50\r\n    numberGreaterThan50: function () {\r\n      var number = $(this).find('.number').text();\r\n      return parseInt(number, 10) > 50;\r\n    },\r\n    // show if name ends with -ium\r\n    ium: function () {\r\n      var name = $(this).find('.name').text();\r\n      return name.match(/ium$/);\r\n    }\r\n  };\r\n\r\n  // bind filter button click\r\n  $('.works-nav').on('click', 'button', function () {\r\n    var filterValue = $(this).attr('data-filter');\r\n    // use filterFn if matches value\r\n    filterValue = filterFns[filterValue] || filterValue;\r\n    $grid.isotope({\r\n      filter: filterValue\r\n    });\r\n  });\r\n\r\n  // bind sort button click\r\n  $('#sorts').on('click', 'button', function () {\r\n    var sortByValue = $(this).attr('data-sort-by');\r\n    $grid.isotope({\r\n      sortBy: sortByValue\r\n    });\r\n  });\r\n\r\n  // change is-checked class on buttons\r\n  $('.works-nav').each(function (i, buttonGroup) {\r\n    var $buttonGroup = $(buttonGroup);\r\n    $buttonGroup.on('click', 'button', function () {\r\n      $buttonGroup.find('.active').removeClass('active');\r\n      $(this).addClass('active');\r\n    });\r\n  });\r\n}"]}